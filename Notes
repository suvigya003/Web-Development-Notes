Server Side scripting language

- Source code is not visible to the user because its output of server-sideside is an HTML page. 
- Used to create dynamic pages.
- In this load times are generally faster than client-side scripting.
- When you need to store and retrieve information a database will be used to contain data. It can use huge resources of the server.
- It reduces client-side computation overhead.
- In this any server-side technology can be used and it does not depend on the client. 
- It runs on the webserver.
- It provides more security for data.
- Uses scripts on the webserver to produce a response that is customized for each client’s request.
- Eg:- PHP, Python, Java, Ruby.

**********************************************************************************************************************************************************************

Client Side scripting language

- Source code is visible to the user.
- Source code is used to transfer from webserver to user’s computer over the internet and run directly on browsers.
- It cannot be basically used to connect to databases on a web server.
- These scripts cannot access the file system that resides in the web browser.
- It usually depends on the browser and its version.
- It runs on the user’s computer.
- It does not provide security for data.
- Scripts run on the client’s browser.
- Eg:- HTML, CSS, and javascript 

**********************************************************************************************************************************************************************

SSH

- Secure Shell Protocol
- Web Browsers talk to servers using https protocol. Similarly, SSH allows to establish secure communication between systems, 
  remotely access another computer, clone pull/push files from GitHub servers and much more.
- SSH breaks data into series of package and encrypts the data before transmitting.
- Three encryption techniques used by SSH are:-
  Symmetrical Encryption
  Asymmetrical Encryption - (Difiie Hellman Key Exchange Algorithm) 
      Each system generates a temporary public and private key whereas the public key is encrypted and shared to the other system and 
      is decrypted by its paired system’s private key. At this point, each system generated a symmetric keys using their individual private and shared public keys 
      to exchange messages.
  Hashing
      It generates a unique value for all the input a system receives using HMAC (hash based message authentication code).
      Client's system converts msg and symmetric key into a hash number and send it to host.
      Host also has same symm key so he also runs the same hash function on symm key and gets hash number, matches it with received one, if same then connection is 
      secured.
- Github allows to fork or pull using https and ssh but using https, at each fork or pull request, we have to provide our pswd. 
  To avoid this task we can create our own ssh key for our system and add it to our own github account.
